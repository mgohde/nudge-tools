/*
 * This frame will allow users to publish their storylines to a real server. 
 * 
 * It simply mails an SQL file to the lab's PI on behalf of the user after 
 * the storyline passes a round of sanity tests.
 */
package storyeditor;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import javax.swing.WindowConstants;

/**
 *
 * @author mgohde
 */
public class PublicationFrame extends javax.swing.JFrame 
{
    private Settings settings;
    private Story story;
    
    /**
     * Creates new form PublicationFrame
     */
    public PublicationFrame(Story s, Settings settings) 
    {
        SanityReport r;
        initComponents();
        
        this.setTitle("Story Publication Dialog");
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setVisible(true);
        
        this.settings=settings;
        
        //Perform a sanity check on the requested storyline.
        r=s.sanityTest();
        sanityText.setText(r.toString());
        if(r.allGood())
        {
            System.out.printf("Story %s appears to be valid.", s.title);
            
            summaryLabel.setText("PASS");
            summaryLabel.setForeground(Color.green);
        }
        
        else
        {
            publishButton.setEnabled(false);
            summaryLabel.setText("FAIL");
            summaryLabel.setForeground(Color.red);
        }
        
        this.story=s;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        publishButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sanityText = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        summaryLabel = new javax.swing.JLabel();
        copyToClipboardButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        publishButton.setText("Publish");
        publishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Sanity test results:");

        jScrollPane1.setViewportView(sanityText);

        jLabel2.setText("Summary:");

        summaryLabel.setText("pass or fail");

        copyToClipboardButton.setText("Copy report to clipboard");
        copyToClipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyToClipboardButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("DB Administrator Email Address:");

        jTextField1.setText("someone@somewhere.edu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(copyToClipboardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(publishButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(summaryLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(summaryLabel)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publishButton)
                    .addComponent(cancelButton)
                    .addComponent(copyToClipboardButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void copyToClipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyToClipboardButtonActionPerformed
        Clipboard c;
        StringSelection s;
        
        c=Toolkit.getDefaultToolkit().getSystemClipboard();
        s=new StringSelection(sanityText.getText());
        c.setContents(s, s);
    }//GEN-LAST:event_copyToClipboardButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private String strUrl(String input)
    {
        char inputArr[]=input.toCharArray();
        String output="";
        
        for(char c:inputArr)
        {
            if(c==' ')
            {
                output+="%20";
            }
            
            else
            {
                output+=c;
            }
        }
        
        return output;
    }
    
    private void publishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publishButtonActionPerformed
        //String xmlContents=story.generateXML();
        story.exportAsXML(new File(settings.loadSaveDir+"/"+story.title+".final.xml"));
        String publicationUri="mailto:"+settings.dbAdminEmail+"?subject=Publishing%20"+story.title;
        publicationUri+="&body=Contributor%20"+settings.userName+"%20has%20attached%20storyline:"+story.title;
        
        Desktop.getDesktop().
    }//GEN-LAST:event_publishButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton copyToClipboardButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton publishButton;
    private javax.swing.JTextPane sanityText;
    private javax.swing.JLabel summaryLabel;
    // End of variables declaration//GEN-END:variables
}
